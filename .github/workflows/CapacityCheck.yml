name: CapacityCheck

on:
  push:
    branches:
      - 'CapacityCheck'
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12.4
        uses: actions/setup-python@v3
        with:
          python-version: '3.12.4'

      - name: Add conda to system path
        run: echo "$CONDA/bin" >> $GITHUB_PATH

      - name: Verify environment.yml exists
        id: check_env
        run: |
          if [ -f environment.yml ]; then echo "found=true" >> $GITHUB_ENV; else echo "found=false" >> $GITHUB_ENV; fi

      - name: Install dependencies
        if: env.found == 'true'
        run: conda env update --file environment.yml --name base

      - name: Lint with flake8
        if: env.found == 'true'
        run: |
          conda install -c conda-forge flake8
          conda run -n base flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          conda run -n base flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Install pytest
        if: env.found == 'true'
        run: conda install -c conda-forge pytest

      - name: Verify test files exist
        id: check_test_files
        run: |
          if ls tests/test*.py 1> /dev/null 2>&1; then echo "found=true" >> $GITHUB_ENV; else echo "found=false" >> $GITHUB_ENV; fi

      - name: Run tests with pytest
        if: env.found == 'true' && env.found == 'true'
        run: conda run -n base pytest --maxfail=3 --disable-warnings -q

  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Verify Dockerfile exists
        id: check_dockerfile
        run: |
          if [ -f Dockerfile ]; then echo "found=true" >> $GITHUB_ENV; else echo "found=false" >> $GITHUB_ENV; fi

      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          context: .
          file: Dockerfile
          image: tomstaib/sep_dmpg
          registry: docker.io
          platforms: linux/amd64,linux/arm64
          tags: tomstaib/sep_dmpg:${{ github.ref_name }}
          secrets: ${{ secrets.GITHUB_TOKEN }}
